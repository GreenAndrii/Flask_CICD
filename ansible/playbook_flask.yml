---
- name: Setup flask environment with docker
  hosts: all
  become: true
  environment:
    RANDOM_DB_PASSWD:

  tasks:
    - name: Wait until EC2 initiliaze
      wait_for:
        host: "{{ ansible_facts['hostname'] }}"
        port: 22
        delay: 10
      
    - name: Generate DB password
      set_fact:
        RANDOM_DB_PASSWD: "{{ lookup('password', '/dev/null length=15 chars=ascii_letters') }}"

    - name: Update repo
      apt:
        name: aptitude
        state: latest
        update_cache: yes
        force_apt_get: yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop:
        [
          "apt-transport-https",
          "ca-certificates",
          "curl",
          "software-properties-common",
          "python3-pip",
          "virtualenv",
          "python3-setuptools",
        ]
        # "python-dev",
        # "libffi-dev",
        # "openssl-dev",
        # "py-pip",
        # "gcc",
        # "libc-dev",
        # "make",

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name:
          - docker
          - docker-compose

    - name: Copy application to remote host
      copy:
        src: ../microblog
        dest: /home/ubuntu/
        owner: ubuntu
        group: ubuntu

    - name: Build Flask image from Dockerfile
      docker_image:
        name: microblog
        tag: latest
        build:
          dockerfile: Dockerfile
          path: /home/ubuntu/microblog/
          pull: no
        state: present
        source: build

    - name: Tear down existing services
      docker_compose:
        project_src: /home/ubuntu/microblog/
        state: absent
    
    
    - name: Set DB_PASSWORD
      lineinfile: 
        path: /etc/environment 
        state: present 
        regexp: '^DB_PASSWORD' 
        line: 'DB_PASSWORD={{ RANDOM_DB_PASSWD }}'


    - name: Start application from flask docker image
      docker_compose:
        project_name: microblog
        project_src: /home/ubuntu/microblog/
        
    - name: Run unittest
      shell: |
          echo "Start unittest"
          docker exec -it microblog_microblog_1 ./tests.sh         

    - name: Login into Docker hub
      docker_login:
          username: "{{ docker_user }}" # andriibondar 
          password: "{{ docker_token }}" # 01e5deb7-732e-419c-ae82-96d49b844ee1 
    
    - name: Tag and push to docker hub
      docker_image:
        name: microblog:latest
        repository: andriibondar/microblog:latest
        push: yes
        source: local
        force_tag: yes
      
    - name: Log out from DockerHub
      docker_login:
        state: absent